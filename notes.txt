to dos:
+ write tests
-- when newMsg is called, assert that listener
   should be called with data coming back from server
+ close websockets on componentDidUnmount?
+ text overflows on the top
+ box on the side of room with users, active at top

learning typescript:
+ interfaces - like proptypes, used for state too
-- interface IProps {text: string; age?: number;}
--- ? for optional
-- pass them in after Component<IProps, IState>
-- private state: IState = {
-- handleChange = (e: React.FormEvent<HTMLInputElement>) => {}
-- const { value }: {value: string} = event.target;
-- find npm equivalent of yarn add -D @types/lodash (for types for imports)
+ npm install tslint tslint-react --save-dev
+ add tslint.json file
+ https://www.carlrippon.com/creating-a-react-and-typescript-project/
+


resources:
inspiration https://blog.logrocket.com/websockets-tutorial-how-to-go-real-time-with-node-and-react-8e4693fbf843/
https://github.com/AvanthikaMeenakshi/node-websockets
react side youtube https://www.youtube.com/watch?v=82GDkSFmEJc
https://blog.logrocket.com/design-patterns-in-node-js/
express and mongo https://www.youtube.com/watch?v=ZKwrOXl5TDI
typescript https://www.youtube.com/watch?v=OkIDr8QSrLg
node debugging https://www.youtube.com/watch?v=Xb_0awoShR8
^ fire! -- node --inspect index.js or process._debugProcess(add_an_id); if server already started
node mongo https://www.youtube.com/watch?v=Do_Hsb_Hs3c
websockets react https://www.youtube.com/watch?v=V_6HVTdVHKI
!!!making real time websockets https://www.youtube.com/watch?v=82GDkSFmEJc

technical features:
node
websockets
react
typescript?

steps:
1. mkdir `learning-...`
2. `npx create-react-app client`
3. `mkdir server`
4. cd server && npm init
5. touch index.js
6. npm i mongodb
7. npm i express
8. npm i websocket
9. build front end ui
10. npm install @material-ui/core


description:
chat room app with impermanent users
maybe you have to get a like in under 60 seconds
maybe you can't get downvoted

!!!!! different username per room?

classes:
users - name
rooms - name
messages - text, user_id, room_id
users_rooms? (if i want favorite rooms or something)
